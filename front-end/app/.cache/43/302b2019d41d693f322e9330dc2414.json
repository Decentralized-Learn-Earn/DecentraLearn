{"id":"../../node_modules/@ethersproject/strings/lib.esm/bytes32.js","dependencies":[{"name":"C:\\Users\\dhana\\Documents\\GitHub\\LearnEarn\\node_modules\\@ethersproject\\strings\\lib.esm\\bytes32.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\dhana\\Documents\\GitHub\\LearnEarn\\node_modules\\@ethersproject\\strings\\src.ts\\bytes32.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\dhana\\Documents\\GitHub\\LearnEarn\\front-end\\package.json","includedInParent":true,"mtime":1633547634034},{"name":"C:\\Users\\dhana\\Documents\\GitHub\\LearnEarn\\node_modules\\@ethersproject\\strings\\package.json","includedInParent":true,"mtime":1632333704507},{"name":"@ethersproject/constants","loc":{"line":2,"column":25},"parent":"C:\\Users\\dhana\\Documents\\GitHub\\LearnEarn\\node_modules\\@ethersproject\\strings\\lib.esm\\bytes32.js","resolved":"C:\\Users\\dhana\\Documents\\GitHub\\LearnEarn\\node_modules\\@ethersproject\\constants\\lib.esm\\index.js"},{"name":"@ethersproject/bytes","loc":{"line":3,"column":42},"parent":"C:\\Users\\dhana\\Documents\\GitHub\\LearnEarn\\node_modules\\@ethersproject\\strings\\lib.esm\\bytes32.js","resolved":"C:\\Users\\dhana\\Documents\\GitHub\\LearnEarn\\node_modules\\@ethersproject\\bytes\\lib.esm\\index.js"},{"name":"./utf8","loc":{"line":4,"column":42},"parent":"C:\\Users\\dhana\\Documents\\GitHub\\LearnEarn\\node_modules\\@ethersproject\\strings\\lib.esm\\bytes32.js","resolved":"C:\\Users\\dhana\\Documents\\GitHub\\LearnEarn\\node_modules\\@ethersproject\\strings\\lib.esm\\utf8.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatBytes32String = formatBytes32String;\nexports.parseBytes32String = parseBytes32String;\n\nvar _constants = require(\"@ethersproject/constants\");\n\nvar _bytes = require(\"@ethersproject/bytes\");\n\nvar _utf = require(\"./utf8\");\n\nfunction formatBytes32String(text) {\n  // Get the bytes\n  const bytes = (0, _utf.toUtf8Bytes)(text); // Check we have room for null-termination\n\n  if (bytes.length > 31) {\n    throw new Error(\"bytes32 string must be less than 32 bytes\");\n  } // Zero-pad (implicitly null-terminates)\n\n\n  return (0, _bytes.hexlify)((0, _bytes.concat)([bytes, _constants.HashZero]).slice(0, 32));\n}\n\nfunction parseBytes32String(bytes) {\n  const data = (0, _bytes.arrayify)(bytes); // Must be 32 bytes with a null-termination\n\n  if (data.length !== 32) {\n    throw new Error(\"invalid bytes32 - not 32 bytes long\");\n  }\n\n  if (data[31] !== 0) {\n    throw new Error(\"invalid bytes32 string - no null terminator\");\n  } // Find the null termination\n\n\n  let length = 31;\n\n  while (data[length - 1] === 0) {\n    length--;\n  } // Determine the string value\n\n\n  return (0, _utf.toUtf8String)(data.slice(0, length));\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":9,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":13,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":15,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":15,"column":9}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":15,"column":28}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":9,"column":36},"generated":{"line":15,"column":29}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":15,"column":33}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":9,"column":48},"generated":{"line":15,"column":35}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":16,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":17,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":17,"column":8}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":12,"column":15},"generated":{"line":17,"column":13}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":12,"column":18},"generated":{"line":17,"column":16}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":12,"column":30},"generated":{"line":17,"column":38}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":12,"column":18},"generated":{"line":17,"column":42}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":17,"column":43}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":9,"column":48},"generated":{"line":17,"column":44}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":17,"column":45}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":19,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":19,"column":6}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":13},"generated":{"line":19,"column":11}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":14},"generated":{"line":19,"column":12}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":19,"column":18}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":23},"generated":{"line":19,"column":21}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":19,"column":23}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":27},"generated":{"line":19,"column":25}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":29},"generated":{"line":20,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":35},"generated":{"line":20,"column":10}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":39},"generated":{"line":20,"column":14}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":35},"generated":{"line":20,"column":19}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":45},"generated":{"line":20,"column":20}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":35},"generated":{"line":20,"column":63}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":29},"generated":{"line":20,"column":64}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":92},"generated":{"line":21,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":9,"column":48},"generated":{"line":21,"column":3}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":21,"column":4}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":24,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":11},"generated":{"line":24,"column":9}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":19},"generated":{"line":24,"column":29}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":26},"generated":{"line":24,"column":48}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":28},"generated":{"line":24,"column":49}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":26},"generated":{"line":24,"column":54}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":35},"generated":{"line":24,"column":56}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":26},"generated":{"line":24,"column":75}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":19},"generated":{"line":24,"column":76}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":47},"generated":{"line":24,"column":78}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":19},"generated":{"line":24,"column":83}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":53},"generated":{"line":24,"column":84}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":19},"generated":{"line":24,"column":85}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":56},"generated":{"line":24,"column":87}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":19},"generated":{"line":24,"column":89}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":11},"generated":{"line":24,"column":90}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":24,"column":91}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":19,"column":1},"generated":{"line":25,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":27,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":21,"column":16},"generated":{"line":27,"column":9}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":27,"column":27}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":27,"column":28}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":27,"column":33}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":21,"column":51},"generated":{"line":27,"column":35}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":28,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":22,"column":10},"generated":{"line":28,"column":8}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":22,"column":14},"generated":{"line":28,"column":12}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":22,"column":17},"generated":{"line":28,"column":15}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":22,"column":26},"generated":{"line":28,"column":36}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":22,"column":17},"generated":{"line":28,"column":41}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":28,"column":42}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":21,"column":51},"generated":{"line":28,"column":43}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":28,"column":44}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":30,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":30,"column":6}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":12},"generated":{"line":30,"column":10}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":13},"generated":{"line":30,"column":11}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":30,"column":17}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":24},"generated":{"line":30,"column":22}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":30,"column":24}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":28},"generated":{"line":30,"column":26}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":30},"generated":{"line":31,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":36},"generated":{"line":31,"column":10}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":40},"generated":{"line":31,"column":14}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":36},"generated":{"line":31,"column":19}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":46},"generated":{"line":31,"column":20}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":36},"generated":{"line":31,"column":57}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":30},"generated":{"line":31,"column":58}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":87},"generated":{"line":32,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":34,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":34,"column":6}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":12},"generated":{"line":34,"column":10}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":13},"generated":{"line":34,"column":11}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":12},"generated":{"line":34,"column":13}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":34,"column":14}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":21},"generated":{"line":34,"column":19}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":34,"column":20}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":34,"column":22}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":26},"generated":{"line":35,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":32},"generated":{"line":35,"column":10}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":36},"generated":{"line":35,"column":14}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":32},"generated":{"line":35,"column":19}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":42},"generated":{"line":35,"column":20}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":32},"generated":{"line":35,"column":65}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":26},"generated":{"line":35,"column":66}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":91},"generated":{"line":36,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":21,"column":51},"generated":{"line":36,"column":3}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":36,"column":4}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":39,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":29,"column":8},"generated":{"line":39,"column":6}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":29,"column":14},"generated":{"line":39,"column":12}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":29,"column":17},"generated":{"line":39,"column":15}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":39,"column":17}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":41,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":11},"generated":{"line":41,"column":9}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":15},"generated":{"line":41,"column":13}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":16},"generated":{"line":41,"column":14}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":22},"generated":{"line":41,"column":20}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":41,"column":23}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":15},"generated":{"line":41,"column":24}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":11},"generated":{"line":41,"column":25}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":32},"generated":{"line":41,"column":30}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":41,"column":31}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":41,"column":33}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":37},"generated":{"line":42,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":37},"generated":{"line":42,"column":4}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":43},"generated":{"line":42,"column":10}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":48},"generated":{"line":43,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":21,"column":51},"generated":{"line":43,"column":3}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":43,"column":4}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":46,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":11},"generated":{"line":46,"column":9}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":46,"column":32}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":28},"generated":{"line":46,"column":36}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":29},"generated":{"line":46,"column":37}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":46,"column":42}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":46,"column":43}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":46,"column":44}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":38},"generated":{"line":46,"column":46}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":46,"column":52}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":11},"generated":{"line":46,"column":53}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":46,"column":54}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":47,"column":0}}],"sources":{"../src.ts/bytes32.ts":"\"use strict\";\n\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\n\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\n\n\nexport function formatBytes32String(text: string): string {\n\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n\n    // Check we have room for null-termination\n    if (bytes.length > 31) { throw new Error(\"bytes32 string must be less than 32 bytes\"); }\n\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([ bytes, HashZero ]).slice(0, 32));\n}\n\nexport function parseBytes32String(bytes: BytesLike): string {\n    const data = arrayify(bytes);\n\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) { throw new Error(\"invalid bytes32 - not 32 bytes long\"); }\n    if (data[31] !== 0) { throw new Error(\"invalid bytes32 string - no null terminator\"); }\n\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) { length--; }\n\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n\n"},"lineCount":null}},"error":null,"hash":"a0bd3c93d97c039274d94f3482a99770","cacheData":{"env":{}}}